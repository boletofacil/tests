{"version":3,"sources":["assets/images/logo-marvel.png","assets/images/loading.gif","components/Header/index.tsx","components/SearchBox/index.tsx","components/CharacterCard/index.tsx","components/CharacterModal/index.tsx","components/Pagination/index.tsx","components/CharactersList/index.tsx","config/env.ts","services/marvelApi.ts","components/App.tsx","index.tsx"],"names":["module","exports","Header","className","src","logo","alt","aria-hidden","style","zIndex","marginTop","split","map","letter","index","key","SearchBox","submitSearch","useState","search","setSearch","onSubmit","ev","preventDefault","role","id","htmlFor","type","placeholder","value","onChange","target","autoFocus","disabled","CharacterCard","character","showDetails","thumbnail","path","extension","title","name","onClick","bind","CharacterModal","hideDetails","useEffect","$","modal","on","tabIndex","data-dismiss","description","stories","available","comics","series","events","href","urls","url","Pagination","goToPage","displayCounter","current","total","limit","last","Math","ceil","useReducer","x","forceUpdate","visibility","CharactersList","currentPage","characters","metadata","displayDetails","setDisplayDetails","marvelApi","http","timestamp","Number","Date","publicKey","env","privateKey","hashKey","md5","this","axios","create","baseURL","params","apikey","hash","ts","page","offset","get","defaults","nameStartsWith","App","setMetadata","setCharacters","loading","setLoading","lastSearch","setLastSearch","setCurrentPage","a","marvel","data","results","responseMetadata","console","error","length","loadingSpinner","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24a17b92.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-marvel.123f631d.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.4b6d7e44.gif\";","import React from 'react'\r\nimport logo from './../../assets/images/logo-marvel.png'\r\nimport './styles.scss'\r\n\r\nconst Header = () => (\r\n  <div className=\"container-fluid py-4 bg-marvel\">\r\n    <div className=\"mx-auto w-25\">\r\n      <figure className=\"figure w-100\">\r\n        <img className=\"figure-img img-fluid\" src={ logo } alt=\"Marvel Comics logo\" />\r\n      </figure>\r\n      <div className=\"h6 text-white px-1 d-flex justify-content-between\" aria-hidden=\"true\" style={{ zIndex: 1, marginTop: '-24px' }}>\r\n        {'CHARACTERS'.split('').map((letter, index) => <div key={index}>{letter}</div>)}\r\n      </div>\r\n      <h1 className=\"sr-only\">\r\n        Chracters of the Marvel Comics Universe\r\n      </h1>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Header\r\n","import React, { useState, FormEvent } from 'react'\r\nimport './styles.scss'\r\n\r\ninterface SearchBoxProps {\r\n  submitSearch: (search: string) => any\r\n}\r\n\r\nconst SearchBox: React.FC<SearchBoxProps> = ({ submitSearch }) => {\r\n  const [search, setSearch] = useState('')\r\n\r\n  function handleSubmit(ev: FormEvent) {\r\n    ev.preventDefault()\r\n    submitSearch(search)\r\n  }\r\n\r\n  return (\r\n    <form className=\"px-2 pt-4 pb-2\" onSubmit={handleSubmit} role=\"search\">\r\n      <div id=\"search-box\" className=\"form-group\">\r\n        <label htmlFor=\"search-box\" className=\"h5\">\r\n          Start typing the name of your character:\r\n        </label>\r\n        <div className=\"row align-middle px-2\">\r\n          <input\r\n            id=\"search-input\"\r\n            type=\"text\"\r\n            className=\"form-control border-marvel col-10 col-lg-11 rounded-0\"\r\n            placeholder=\"e.g.: &quot;captain&quot;\"\r\n            value={search}\r\n            onChange={(ev) => setSearch(ev.target.value)}\r\n            autoFocus\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-marvel col-2 col-lg-1 rounded-0\"\r\n            disabled={!search}\r\n            value=\"GO\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport './styles.scss'\r\n\r\ninterface CharacterCardProps {\r\n  showDetails: (CharacterCard?: any) => any\r\n  character: any\r\n}\r\n\r\nconst CharacterCard: React.FC<CharacterCardProps> = ({ character, showDetails }) => (\r\n  <div className=\"col-12 col-md-6\">\r\n    <div className=\"card mb-3 border-marvel character-card\">\r\n      <div className=\"card-body\">\r\n        <img\r\n          src={`${character.thumbnail.path}.${character.thumbnail.extension}`}\r\n          className=\"figure-fluid float-left\"\r\n          alt=\"Character thumbnail\"\r\n        />\r\n        <div className=\"character-card-details\">\r\n          <h3 className=\"card-title text-truncate h5\" title={character.name}>\r\n            {character.name}\r\n          </h3>\r\n          <div className=\"card-text text-center\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-sm btn-marvel w-50 rounded-0\"\r\n              onClick={showDetails.bind(null, character)}\r\n            >\r\n              More Details...\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default CharacterCard\r\n","import React, { useEffect } from 'react'\r\nimport $ from 'jquery'\r\nimport './styles.scss'\r\n\r\ninterface CharacterModalProps {\r\n  hideDetails: (record?: any) => any\r\n  character: any\r\n}\r\n\r\nconst CharacterModal: React.FC<CharacterModalProps> = ({ character, hideDetails }) => {\r\n  useEffect(() => {\r\n    $('#character-details').modal('show')\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    $('#character-details').on('hidden.bs.modal', () => {\r\n      hideDetails()\r\n    })\r\n  }, [hideDetails])\r\n\r\n  return (\r\n    <div id=\"character-details\" className=\"modal fade\" tabIndex={1} role=\"dialog\">\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header d-flex flex-column align-items-center\">\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            <figure className=\"figure w-50\">\r\n              <img\r\n                className=\"figure-img img-fluid rounded-circle\"\r\n                src={`${character.thumbnail.path}.${character.thumbnail.extension}`}\r\n                alt=\"Character thumbnail\"\r\n              />\r\n            </figure>\r\n            <h1 className=\"modal-title text-center\">\r\n              {character.name}\r\n            </h1>\r\n          </div>\r\n          <div className=\"modal-body text-center\">\r\n            <p className=\"h5\">{character.description || (\r\n              <span className=\"font-italic\">No description</span>\r\n            )}</p>\r\n            <div className=\"d-flex justify-content-around pt-3\">\r\n              <h5><span className=\"badge badge-primary\">{character.stories.available} stories</span></h5>\r\n              <h5><span className=\"badge badge-danger\">{character.comics.available} comics</span></h5>\r\n              <h5><span className=\"badge badge-info\">{character.series.available} series</span></h5>\r\n              <h5><span className=\"badge badge-warning\">{character.events.available} events</span></h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer d-flex justify-content-between\">\r\n            <button type=\"button\" className=\"btn btn-light rounded-0\" data-dismiss=\"modal\">\r\n              Close\r\n            </button>\r\n            <a href={character.urls[0].url} className=\"btn btn-marvel rounded-0\">\r\n              Official Marvel Page\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CharacterModal\r\n","import React, { useReducer } from 'react'\r\nimport './styles.scss'\r\n\r\ninterface PaginationProps {\r\n  goToPage: (page: number) => any\r\n  displayCounter?: boolean\r\n  current: number\r\n  total: number\r\n  limit: number\r\n}\r\n\r\nconst Pagination: React.FC<PaginationProps> = ({\r\n  goToPage, displayCounter, current, total, limit,\r\n}) => {\r\n  const last = Math.ceil(total / limit)\r\n\r\n  const [, forceUpdate] = useReducer((x: number) => x + 1, 0)\r\n\r\n  function goToPrevious() {\r\n    goToPage(current - 1)\r\n    forceUpdate()\r\n  }\r\n\r\n  function goToNext() {\r\n    goToPage(current + 1)\r\n    forceUpdate()\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-between mt-2 mb-3\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-marvel page-nav-btn\"\r\n        onClick={goToPrevious}\r\n        style={{ visibility: (current === 1) ? 'hidden' : 'visible' }}\r\n      >Previous</button>\r\n      {displayCounter && (\r\n        <span>Page {current} of {last}</span>\r\n      )}\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-marvel page-nav-btn\"\r\n        onClick={goToNext}\r\n        style={{ visibility: (current === last) ? 'hidden' : 'visible' }}\r\n      >Next</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","import React, { useState } from 'react'\r\nimport CharacterCard from '../CharacterCard'\r\nimport CharacterModal from '../CharacterModal'\r\nimport Pagination from '../Pagination'\r\nimport './styles.scss'\r\n\r\ninterface CharactersListProps {\r\n  goToPage: (page: number) => any\r\n  currentPage: number\r\n  characters: any[]\r\n  metadata: {\r\n    total?: number\r\n    limit?: number\r\n  }\r\n}\r\n\r\nconst CharactersList: React.FC<CharactersListProps> = ({\r\n  goToPage, currentPage, characters, metadata: { total = 1, limit = 1 },\r\n}) => {\r\n  const [displayDetails, setDisplayDetails] = useState(null)\r\n\r\n  return (\r\n    <div className=\"pb-4\">\r\n      {(total > limit) && (\r\n        <Pagination\r\n          goToPage={goToPage}\r\n          current={currentPage}\r\n          total={total}\r\n          limit={limit}\r\n        />\r\n      )}\r\n      <div className=\"row\">\r\n        {characters.map((character: any) => (\r\n          <CharacterCard\r\n            key={character.id}\r\n            character={character}\r\n            showDetails={() => setDisplayDetails(character)}\r\n          />\r\n        ))}\r\n      </div>\r\n      {(total > limit) && (\r\n        <Pagination\r\n          goToPage={goToPage}\r\n          current={currentPage}\r\n          total={total}\r\n          limit={limit}\r\n          displayCounter\r\n        />\r\n      )}\r\n      {displayDetails && (\r\n        <CharacterModal\r\n          character={displayDetails}\r\n          hideDetails={setDisplayDetails}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CharactersList\r\n","\r\n/**\r\n * Define required enviroment variables to consume Marvel API\r\n */\r\nexport default {\r\n  privateKey: () => 'e0e55f6771e417e64814d7c87461f62297310cc8',\r\n  publicKey: () => '25830836275ae902313448074c6033c4',\r\n}\r\n","import axios, { AxiosInstance } from 'axios'\r\nimport md5 from 'md5'\r\nimport env from '../config/env'\r\n\r\nclass MarvelApi {\r\n  private limit: number\r\n  private http: AxiosInstance\r\n\r\n  constructor() {\r\n    const timestamp = Number(new Date())\r\n    const publicKey = env.publicKey()\r\n    const privateKey = env.privateKey()\r\n    const hashKey = md5(timestamp + privateKey + publicKey)\r\n\r\n    this.limit = 20\r\n    this.http = axios.create({\r\n      baseURL: 'https://gateway.marvel.com/v1/public/',\r\n      params: {\r\n        limit: this.limit,\r\n        apikey: publicKey,\r\n        hash: hashKey,\r\n        ts: timestamp,\r\n      },\r\n    })\r\n  }\r\n\r\n  public search(search: string, page: number = 1) {\r\n    const offset = (page * this.limit) - this.limit\r\n\r\n    return this.http.get('characters', {\r\n      params: {\r\n        ...this.http.defaults.params,\r\n        nameStartsWith: search,\r\n        offset,\r\n      },\r\n    })\r\n  }\r\n}\r\n\r\nexport const marvelApi = new MarvelApi()\r\nexport default marvelApi\r\n","import React, { useState } from 'react'\r\nimport Header from './Header'\r\nimport SearchBox from './SearchBox'\r\nimport CharactersList from './CharactersList'\r\nimport marvel from '../services/marvelApi'\r\nimport loadingSpinner from '../assets/images/loading.gif'\r\n\r\nconst App = () => {\r\n  const [metadata, setMetadata] = useState({})\r\n  const [characters, setCharacters] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [lastSearch, setLastSearch] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  async function submitSearch(search: string, page: number = 1) {\r\n    setLoading(true)\r\n    setCurrentPage(page)\r\n    setLastSearch(search)\r\n\r\n    try {\r\n      const { data } = await marvel.search(search, page)\r\n      const { results, ...responseMetadata } = data.data\r\n      setMetadata(responseMetadata)\r\n      setCharacters(results)\r\n    } catch (ex) {\r\n      console.error(ex)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"container-fluid py-5\">\r\n        <div className=\"container bg-white\">\r\n          <SearchBox submitSearch={submitSearch} />\r\n          <div className={(loading || characters.length) ? 'd-block' : 'd-none'}>\r\n            <hr />\r\n            {loading ? (\r\n              <div className=\"text-center py-5\">\r\n                <img src={loadingSpinner} alt=\"Loading animation\" />\r\n              </div>\r\n            ) : (\r\n              <CharactersList\r\n                metadata={metadata}\r\n                characters={characters}\r\n                currentPage={currentPage}\r\n                goToPage={(page: number) => submitSearch(lastSearch, page)}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport 'jquery'\r\nimport 'bootstrap'\r\nimport './assets/styles/global.scss'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n"],"sourceRoot":""}