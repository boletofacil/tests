{"version":3,"sources":["assets/images/logo-marvel.png","components/Header/index.tsx","components/SearchBox/index.tsx","components/CharacterCard/index.tsx","components/CharacterModal/index.tsx","components/Pagination/index.tsx","components/CharactersList/index.tsx","services/marvelApi.ts","assets/images/loading.gif","components/App.tsx","index.tsx"],"names":["Header","className","src","logo","alt","aria-hidden","style","zIndex","marginTop","split","map","letter","index","SearchBox","props","useState","search","setSearch","onSubmit","ev","preventDefault","submitSearch","role","id","htmlFor","type","placeholder","value","onChange","target","autoFocus","disabled","CharacterCard","character","showDetails","thumbnail","path","extension","title","name","onClick","bind","CharacterModal","hideDetails","useEffect","$","modal","document","body","css","overflow","paddingRight","on","tabIndex","data-dismiss","description","stories","available","comics","series","events","href","urls","url","Pagination","last","Math","ceil","total","limit","useReducer","x","forceUpdate","goToPage","current","visibility","displayCounter","CharactersList","currentPage","characters","metadata","displayDetails","setDisplayDetails","marvelApi","http","timestamp","Number","Date","publicKey","process","hashKey","md5","this","axios","create","baseURL","params","apikey","hash","ts","page","offset","get","defaults","nameStartsWith","App","setMetadata","setCharacters","loading","setLoading","lastSearch","setLastSearch","setCurrentPage","a","marvel","data","results","responseMetadata","console","error","length","loadingSpinner","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.40b5c476.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-marvel.e2e88f40.png\";","import React, { FC } from 'react'\r\nimport logo from '../../assets/images/logo-marvel.png'\r\nimport './styles.scss'\r\n\r\nconst Header: FC = () => (\r\n  <div className=\"container-fluid py-4 bg-marvel\">\r\n    <div className=\"mx-auto w-25\">\r\n      <figure className=\"figure w-100\">\r\n        <img className=\"figure-img img-fluid\" src={ logo } alt=\"Marvel Comics logo\" />\r\n      </figure>\r\n\r\n      <div className=\"h6 text-white px-1 d-flex justify-content-between\" aria-hidden=\"true\" style={{ zIndex: 1, marginTop: '-24px' }}>\r\n        {'CHARACTERS'.split('').map((letter, index) => <div key={index}>{letter}</div>)}\r\n      </div>\r\n\r\n      <h1 className=\"sr-only\">\r\n        Characters of the Marvel Comics Universe\r\n      </h1>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default Header\r\n","import React, { FC, FormEvent, useState } from 'react'\r\nimport './styles.scss'\r\n\r\ninterface SearchBoxProps {\r\n  submitSearch: (search: string) => any\r\n}\r\n\r\nconst SearchBox: FC<SearchBoxProps> = (props) => {\r\n  const [search, setSearch] = useState('')\r\n\r\n  const handleSubmit = (ev: FormEvent) => {\r\n    ev.preventDefault()\r\n    props.submitSearch(search)\r\n  }\r\n\r\n  return (\r\n    <form className=\"px-2 pt-4 pb-2\" onSubmit={handleSubmit} role=\"search\">\r\n      <div id=\"search-box\" className=\"form-group\">\r\n        <label htmlFor=\"search-box\" className=\"h5\">\r\n          Start typing the name of your character:\r\n        </label>\r\n        <div className=\"row align-middle px-2\">\r\n          <input\r\n            id=\"search-input\"\r\n            type=\"text\"\r\n            className=\"form-control border-marvel col-10 col-lg-11 rounded-0\"\r\n            placeholder=\"e.g.: &quot;captain&quot;\"\r\n            value={search}\r\n            onChange={(ev) => setSearch(ev.target.value)}\r\n            autoFocus\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            className=\"btn btn-marvel col-2 col-lg-1 rounded-0\"\r\n            disabled={!search}\r\n            value=\"GO\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import React, { FC } from 'react'\r\nimport './styles.scss'\r\n\r\ninterface CharacterCardProps {\r\n  showDetails: (CharacterCard?: any) => any\r\n  character: any\r\n}\r\n\r\nconst CharacterCard: FC<CharacterCardProps> = ({ character, showDetails }) => (\r\n  <div className=\"col-12 col-md-6\">\r\n    <div className=\"card mb-3 border-marvel character-card\">\r\n      <div className=\"card-body\">\r\n        <img\r\n          src={`${character.thumbnail.path}.${character.thumbnail.extension}`}\r\n          className=\"figure-fluid float-left\"\r\n          alt=\"Character thumbnail\"\r\n        />\r\n        <div className=\"character-card-details\">\r\n          <h3 className=\"card-title text-truncate h5\" title={character.name}>\r\n            {character.name}\r\n          </h3>\r\n          <div className=\"card-text text-center\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-sm btn-marvel w-50 rounded-0\"\r\n              onClick={showDetails.bind(null, character)}\r\n            >\r\n              More Details...\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default CharacterCard\r\n","import React, { FC, useEffect } from 'react'\r\nimport $ from 'jquery'\r\nimport './styles.scss'\r\n\r\ninterface CharacterModalProps {\r\n  hideDetails: (record?: any) => any\r\n  character: any\r\n}\r\n\r\nconst CharacterModal: FC<CharacterModalProps> = ({ character, hideDetails }) => {\r\n  useEffect(() => {\r\n    $('#character-details').modal('show')\r\n    $(document.body).css({\r\n      overflow: 'auto',\r\n      paddingRight: 0,\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    $('#character-details').on('hidden.bs.modal', () => {\r\n      hideDetails()\r\n    })\r\n  }, [hideDetails])\r\n\r\n  return (\r\n    <div id=\"character-details\" className=\"modal fade\" tabIndex={1} role=\"dialog\">\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header d-flex flex-column align-items-center\">\r\n            <button type=\"button\" className=\"close\" data-dismiss=\"modal\">\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n            <figure className=\"figure w-50\">\r\n              <img\r\n                className=\"figure-img img-fluid rounded-circle\"\r\n                src={`${character.thumbnail.path}.${character.thumbnail.extension}`}\r\n                alt=\"Character thumbnail\"\r\n              />\r\n            </figure>\r\n            <h1 className=\"modal-title text-center\">\r\n              {character.name}\r\n            </h1>\r\n          </div>\r\n          <div className=\"modal-body text-center\">\r\n            <p className=\"h5\">{character.description || (\r\n              <span className=\"font-italic\">No description</span>\r\n            )}</p>\r\n            <div className=\"d-flex justify-content-around pt-3\">\r\n              <h5><span className=\"badge badge-primary\">{character.stories.available} stories</span></h5>\r\n              <h5><span className=\"badge badge-danger\">{character.comics.available} comics</span></h5>\r\n              <h5><span className=\"badge badge-info\">{character.series.available} series</span></h5>\r\n              <h5><span className=\"badge badge-warning\">{character.events.available} events</span></h5>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer d-flex justify-content-between\">\r\n            <button type=\"button\" className=\"btn btn-light rounded-0\" data-dismiss=\"modal\">\r\n              Close\r\n            </button>\r\n            <a href={character.urls[0].url} className=\"btn btn-marvel rounded-0\">\r\n              Official Marvel Page\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CharacterModal\r\n","import React, { FC, useReducer } from 'react'\r\nimport './styles.scss'\r\n\r\ninterface PaginationProps {\r\n  goToPage: (page: number) => any\r\n  displayCounter?: boolean\r\n  current: number\r\n  total: number\r\n  limit: number\r\n}\r\n\r\nconst Pagination: FC<PaginationProps> = (props) => {\r\n  const last = Math.ceil(props.total / props.limit)\r\n\r\n  const [, forceUpdate] = useReducer((x: number) => x + 1, 0)\r\n\r\n  const goToPrevious = () => {\r\n    props.goToPage(props.current - 1)\r\n    forceUpdate()\r\n  }\r\n\r\n  const goToNext = () => {\r\n    props.goToPage(props.current + 1)\r\n    forceUpdate()\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-between mt-2 mb-3\">\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-marvel page-nav-btn\"\r\n        onClick={goToPrevious}\r\n        style={{ visibility: (props.current === 1) ? 'hidden' : 'visible' }}\r\n      >Previous</button>\r\n      {props.displayCounter && (\r\n        <span>Page {props.current} of {last}</span>\r\n      )}\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn btn-outline-marvel page-nav-btn\"\r\n        onClick={goToNext}\r\n        style={{ visibility: (props.current === last) ? 'hidden' : 'visible' }}\r\n      >Next</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Pagination\r\n","import React, { FC, useState } from 'react'\r\nimport CharacterCard from '../CharacterCard'\r\nimport CharacterModal from '../CharacterModal'\r\nimport Pagination from '../Pagination'\r\nimport './styles.scss'\r\n\r\ninterface CharactersListProps {\r\n  goToPage: (page: number) => any\r\n  currentPage: number\r\n  characters: any[]\r\n  metadata: {\r\n    total?: number\r\n    limit?: number\r\n  }\r\n}\r\n\r\nconst CharactersList: FC<CharactersListProps> = ({\r\n  goToPage, currentPage, characters, metadata: { total = 1, limit = 1 },\r\n}) => {\r\n  const [displayDetails, setDisplayDetails] = useState(null)\r\n\r\n  return (\r\n    <div className=\"pb-4\">\r\n      {(total > limit) && (\r\n        <Pagination\r\n          goToPage={goToPage}\r\n          current={currentPage}\r\n          total={total}\r\n          limit={limit}\r\n        />\r\n      )}\r\n      <div className=\"row\">\r\n        {characters.map((character: any) => (\r\n          <CharacterCard\r\n            key={character.id}\r\n            character={character}\r\n            showDetails={() => setDisplayDetails(character)}\r\n          />\r\n        ))}\r\n      </div>\r\n      {(total > limit) && (\r\n        <Pagination\r\n          goToPage={goToPage}\r\n          current={currentPage}\r\n          total={total}\r\n          limit={limit}\r\n          displayCounter\r\n        />\r\n      )}\r\n      {displayDetails && (\r\n        <CharacterModal\r\n          character={displayDetails}\r\n          hideDetails={setDisplayDetails}\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CharactersList\r\n","import axios, { AxiosInstance } from 'axios'\r\nimport md5 from 'md5'\r\n\r\nclass MarvelApi {\r\n  private limit: number\r\n  private http: AxiosInstance\r\n\r\n  constructor() {\r\n    const timestamp = Number(new Date())\r\n    const publicKey = process.env.REACT_APP_API_PUBLIC_KEY as string\r\n    const privateKey = process.env.REACT_APP_API_PRIVATE_KEY as string\r\n    const hashKey = md5(timestamp + privateKey + publicKey)\r\n\r\n    this.limit = 20\r\n    this.http = axios.create({\r\n      baseURL: process.env.REACT_APP_API_URL,\r\n      params: {\r\n        limit: this.limit,\r\n        apikey: publicKey,\r\n        hash: hashKey,\r\n        ts: timestamp,\r\n      },\r\n    })\r\n  }\r\n\r\n  public search(search: string, page = 1) {\r\n    const offset = (page * this.limit) - this.limit\r\n\r\n    return this.http.get('characters', {\r\n      params: {\r\n        ...this.http.defaults.params,\r\n        nameStartsWith: search,\r\n        offset,\r\n      },\r\n    })\r\n  }\r\n}\r\n\r\nexport const marvelApi = new MarvelApi()\r\nexport default marvelApi\r\n","export default __webpack_public_path__ + \"static/media/loading.f82ccd87.gif\";","import React, { FC, useState } from 'react'\r\nimport Header from './Header'\r\nimport SearchBox from './SearchBox'\r\nimport CharactersList from './CharactersList'\r\nimport marvel from '../services/marvelApi'\r\nimport loadingSpinner from '../assets/images/loading.gif'\r\n\r\nconst App: FC = () => {\r\n  const [metadata, setMetadata] = useState({})\r\n  const [characters, setCharacters] = useState([])\r\n  const [loading, setLoading] = useState(false)\r\n  const [lastSearch, setLastSearch] = useState('')\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  const submitSearch = async (search: string, page = 1) => {\r\n    setLoading(true)\r\n    setCurrentPage(page)\r\n    setLastSearch(search)\r\n\r\n    try {\r\n      const { data } = await marvel.search(search, page)\r\n      const { results, ...responseMetadata } = data.data\r\n      setMetadata(responseMetadata)\r\n      setCharacters(results)\r\n    } catch (ex) {\r\n      console.error(ex)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"container-fluid py-5\">\r\n        <div className=\"container bg-white\">\r\n          <SearchBox submitSearch={submitSearch} />\r\n          <div className={(loading || characters.length) ? 'd-block' : 'd-none'}>\r\n            <hr />\r\n            {loading ? (\r\n              <div className=\"text-center py-5\">\r\n                <img src={loadingSpinner} alt=\"Loading animation\" />\r\n              </div>\r\n            ) : (\r\n              <CharactersList\r\n                metadata={metadata}\r\n                characters={characters}\r\n                currentPage={currentPage}\r\n                goToPage={(page: number) => submitSearch(lastSearch, page)}\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport 'jquery'\r\nimport 'bootstrap'\r\nimport './assets/styles/global.scss'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n"],"sourceRoot":""}